brace_class:Allman                              Class opening/closing braces on seperate line
brace_class:OTBS                                Class structure opening/closing braces on same line as declaration

brace_controlStructure:Allman                   Control structure opening/closing braces on seperate line
brace_controlStructure:mandatory                Control structure braces are mandatory
brace_controlStructure:OTBS                     Control structure opening/closing braces on same line as declaration, except for else/elseif
brace_controlStructure:Stroustrup               Control structure opening/closing braces on same line as declaration, even for else/elseif

brace_method:Allman                             Method opening/closing braces on seperate line
brace_method:OTBS                               Method structure opening/closing braces on same line as declaration

declareOrder_method:visibilityAfterFinal        abstract/final declared before visibility
declareOrder_method:visibilityAfterStatic       static declared before visibility
declareOrder_method:visibilityBeforeFinal       abstract/final declared after visibility
declareOrder_method:visibilityBeforeStatic      static declared after visibility

docblocks:mandatory                             Docblocks manditory
docblocks:optional                              Docblocks optional

encoding:ISO_8859_1                             ISO-8859-1
encoding:utf8                                   UTF-8

errorLevel:All                                  E_ALL
errorLevel:Strict                               E_ALL | E_STRICT

indentation:spaces_2                            2 Spaces
indentation:spaces_4                            4 Spaces
indentation:tabs                                Tabs

indentation_switch:break_0                      Don`t indent 'break' from 'switch'
indentation_switch:break_1                      Indent 'break' one level from 'switch'
indentation_switch:break_2                      Indent 'break' two levels from 'switch'
indentation_switch:case_0                       Don`t indent 'case' from 'switch'
indentation_switch:case_1                       Indent 'case' one level from 'switch'
indentation_switch:case_2                       Indent 'case' two levels from 'switch'

lineEnding:any                                  Whatever
lineEnding:CR                                   Mac Style (CR)
lineEnding:LFCR                                 Windows Style (CRLF)
lineEnding:LF                                   UNIX Style (LF)

linelength_hardLimit:100                        Hard limit on 100 characters
linelength_hardLimit:120                        Hard limit on 120 characters
linelength_hardLimit:80                         Hard limit on 80 characters
linelength_hardLimit:none                       No hard limit on line length

linelength_softLimit:120                        Soft limit on 120 characters
linelength_softLimit:80                         Soft limit on 80 characters
linelength_softLimit:85                         Soft limit on 85 characters
linelength_softLimit:none                       No soft limit on line length

name_class:camel                                camelCase
name_class:pascal                               PascalCase
name_class:snakeCaps                            CAPS_SNAKE_CASE
name_class:snakePascal                          Snake_Pascal_Case
name_class:snake                                snake_case
name_class:snake_UFirst                         Snake_first_letter_uppercase

name_classConstant:camel                        camelCase
name_classConstant:pascal                       PascalCase
name_classConstant:snakeCaps                    CAPS_SNAKE_CASE
name_classConstant:snakePascal                  Snake_Pascal_Case
name_classConstant:snake                        snake_case

name_classMethod:camel                          camelCase
name_classMethod:pascal                         PascalCase
name_classMethod:snakeCaps                      CAPS_SNAKE_CASE
name_classMethod:snakePascal                    Snake_Pascal_Case
name_classMethod:snake                          snake_case

name_classVariable:any                          Anything you like
name_classVariable:camel                        camelCase
name_classVariable:pascal                       PascalCase
name_classVariable:snakeCaps                    CAPS_SNAKE_CASE
name_classVariable:snakePascal                  Snake_Pascal_Case
name_classVariable:snake                        snake_case

name_constant:camel                             camelCase
name_constant:pascal                            PascalCase
name_constant:snakeCaps                         CAPS_SNAKE_CASE
name_constant:snakePascal                       Snake_Pascal_Case
name_constant:snake                             snake_case

name_function:camel                             camelCase
name_function:pascal                            PascalCase
name_function:snakeCaps                         CAPS_SNAKE_CASE
name_function:snakePascal                       Snake_Pascal_Case
name_function:snake                             snake_case

namespace:poorMans                              Use Class/Functions Name instead of Namespace
namespace:proper                                Use Namespace

PhpConstants:lowerCase                          PHP Constants LowerCase (true/false/null)
PhpConstants:upperCase                          PHP Constants UpperCase (TRUE/FALSE/NULL)

PhpKeywords:lowerCase                           PHP Keywords LowerCase (try/catch/if/switch/etc)
PhpKeywords:upperCase                           PHP Keywords UpperCase (TRY/CATCH/IF/SWITCH/ETC)

space_controlStructureBrackets:NoSpaceInside    No space between control parenthesis and innards
space_controlStructureBrackets:NoSpaceOutside   No space between control keyword and opening parenthesis
space_controlStructureBrackets:SpaceInside      Space between control parenthesis and innards
space_controlStructureBrackets:SpaceOutside     Space between control keyword and opening parenthesis

space_methodName:noSpaceAfter                   No space between method name and opening parenthesis
space_methodName:spaceAfter                     Space between method name and opening parenthesis

space_methodParamsBlock:noSpaceAfter            No space after method parameter block and opening brace
space_methodParamsBlock:spaceAfter              Space after method parameter block and opening brace

tag_closingTag:Allowed                          Closing tag '?>' allowed
tag_closingTag:Manditory                        Closing tag '?>' manditory
tag_closingTag:NotAllowed                       Closing tag '?>' not allowed

tag_short:EchoTagAllowed                        Short tag '<?=' allowed
tag_short:EchoTagNotAllowed                     Short tag '<?=' not allowed

tag_short:TagAllowed                            Short tag '<?' allowed
tag_short:TagNotAllowed                         Short tag '<?' not allowed

--------------------------------------------------------------------------------

@FIXME: We're going to have to add a lot of "Don't care" labels for various 
        subgraphs. (look for orphan blocks in the PNG)
@TODO:  Maybe we should also add a "Not Defined" or "Not Mentioned" label for 
        each section to clarify (and make sure all sections have been checked?)

@TODO: Usage of include_once versus require_once?
@TODO: Usage of underscore '_' for private/protected properties? (PSR explicitly says no, some others explicitly say yes. Could be interesting to see?)
@TODO: Conventions for file names?
@TODO: Add Yoda Conditions (left side comparison) versus Sane Conditions (right side comparison)?
@TODO: replace space_methodName_(no)SpaceAfter and space_methodParamsBlock_(no)SpaceAfter with single space_methodDeclarationParamBlock_(no)SpaceAround

#EOF
